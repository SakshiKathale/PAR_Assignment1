FROM osrf/ros:melodic-desktop-full AS melodic-full

# Ensure latest distribution
RUN apt-get update && \
    apt -y dist-upgrade

# Install base dependencies & linux shell tools
RUN apt update && \
    apt install -y \
        apt-utils \
        bash \
        curl \
        host \
        iproute2 \
        iputils-ping \
        less \
        rsync \
        sudo \
        vim \
        wget \
        xterm \
        zsh

# Install development/build software
RUN apt update && \
    # Install some base dependencies
    apt install -y \
        build-essential \
        cmake \
        git \
        nodejs \
        python3 \
        python3-apt \
        python-catkin-tools \
        python-rosdep

FROM melodic-full AS rmit-par-melodic

# ENV ROSBOT_WS=/root/rosbot_workspace

# RUN echo force rebuild from here
# COPY bin $ROSBOT_WS/bin
# COPY config $ROSBOT_WS/config
# COPY melodic_workspace $ROSBOT_WS/melodic_workspace

# WORKDIR /root/husarion_ws/src
# RUN git clone https://github.com/husarion/tutorial_pkg

# AIIL setup part 1
# RUN $ROSBOT_WS/bin/build_setup_docker.py -g
# AIIL setup part 2 (with ENV vars)
# RUN echo force rebuild

# Why can't we source /root/.bashrc directly? (ENV variables are not set)
# RUN ["/bin/bash", "-c", "source /root/rosbot_workspace/.bashrc; set | grep ROS ; $ROSBOT_WS/bin/build_setup_docker_build.py -g"]

# RUN echo 'source ~/rosbot_workspace/melodic_workspace/devel/setup.bash' >> /root/rosbot_workspace/.bashrc

# COPY guest-runner /root/guest-runner
# RUN chmod a+rx /root/guest-runner


# CDI specifc image (using Multi-stage image build)
FROM melodic-full AS rmit-cdi-rack

# CDI Rack proxy
# Optional: comment it out if it causes problems
COPY docker/cdi-proxy /etc/apt/apt.conf.d/02proxy
